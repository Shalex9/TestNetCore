@using TestNetCore.Models.Widgets.Dictionary;
@using Newtonsoft.Json;
@model TestNetCore.Models.Widgets.Dictionary.DictionaryViewModel
@{
    ViewData["Title"] = "Dictionary";
    Layout = "~/Views/Shared/_LayoutCabinet.cshtml";
}

<script src="~/js/jquery.tablesorter.js"></script>

<form asp-controller="Dictionary" asp-action="Dictionary"
      id="Dictionary"
      method="post" enctype="multipart/form-data"
      class="col-md-12">
    @Html.AntiForgeryToken()

    <div class="page-block">
        <h2 id="">Поиск значения слова по словарю</h2>
        <p>ПС: только имена существительные, слов в словаре: @Model.CountWord</p>
        <div class="form-group">
            <label class="col-md-3 control-label" for="bgColorBoxInput" id="bgcolor">Введите искомое слово:</label>
            <div class="col-md-9">
                <div class="input-group" style="width: 300px;">
                    <span class="input-group-addon" id="basic-addon1"><span class="glyphicon glyphicon-pencil"></span></span>
                    <input type="text" id="searchWord" class="form-control" placeholder="Введите слово" aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-md-12" id="wordDefinition"></div>
        </div>
    </div>

    <div class="page-block">
        <h2 style="margin-bottom: 40px;">Подбор ассоциаций к звучанию иностранного слова</h2>
        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">1</div></div>
            <div class="col-md-5 boxInput">
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon1"><span class="glyphicon glyphicon-pencil"></span></span>
                    <input type="text" id="currentWord" class="form-control" placeholder="Введите слово" aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-md-6">Введите "звучание" слова русскими буквами</div>
        </div>
        <div id="noWord" class="alert alert-danger alert-dismissable hide">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            Введите слово для поиска ассоциаций
        </div>
        <div id="noFilter" class="alert alert-danger alert-dismissable hide">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            Не выбран ни один фильтр. Так по какому принципу мне искать?
        </div>

        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">2</div></div>
            <div class="col-md-5 boxSettings">
                <label for="chFullAndSymbols"><input type="checkbox" id="chFullAndSymbols" checked>Полное совпадение слова и еще N символов</label>
                <label for="chFirstLetters"><input type="checkbox" id="chFirstLetters" checked>Совпадает начало</label>
                <label for="chFirstLettersLast"><input type="checkbox" id="chFirstLettersLast" checked>Совпадают начало и последний символ</label>
                <label for="chFirstConsLetters"><input type="checkbox" id="chFirstConsLetters">Совпадают первые две согласные</label>
                <label for="chFirstConsLettersLast"><input type="checkbox" id="chFirstConsLettersLast">Совпадают первые две согласные и последний символ</label>
            </div>
            <div class="col-md-6">
                Выберите фильтры, как будут составляться ассоциации<br />
                Во всех, кроме первого фильтра по умолчанию ищем слова, схожей длинны +/- 1 символ <br />
                Если слово 3 или менее символов, к нему по умолчанию применится только первый фильтр. <br />
                Последние два фильтра применятся в случае, если в слове содержаться не менее 2 согласных, иначе они будут проигнорированы
            </div>
        </div>

        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">3</div></div>
            <div class="col-md-5 boxResult">
                <div id="boxResult"></div>
                <img id="loading" src="~/img/loadingCube.gif" />
            </div>
            <div class="col-md-6">
                Здесь появятся похожие по звучанию слова. Составьте из наиболее интересных из них яркий образ и запомните его!<br />
                Операция поиска производится по словарю, в котором более 50тыс. слов и может занимать некоторе время. В словаре только имена существительные. <br />
                При наведении на слово появляется значение слова, если оно Вам не знакомо. <br />
                <strong>Нажав + возле слова Вы можете сохранить нужные слова-ассоциации в свой личный архив.</strong> <br />
                К одному слову можно выбрать несколько ассоциаций
            </div>
        </div>

        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">4</div></div>
            <div class="col-md-5" id="boxUserAssociation" style="padding: 0;">
                @if (Model.ListAssociation.Count() != 0)
                {
                    <table class="table" id="myAssociation">
                        <thead>
                            <tr style="font-weight: bold">
                                <th style="width: 20%">Слово</th>
                                <th style="width: 73%">Ассоциации</th>
                                <th style="width: 7%"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var i in Model.ListAssociation)
                            {
                                <tr>
                                    <td>@i.Word</td>
                                    <td>@i.AllWordsAss</td>
                                    <td>
                                        <span class="title glyphicon glyphicon-trash pointer" title="Удалить"
                                              onclick="return deleteAssociation(@i.Word)"></span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                } else
                {
                    <h4>Не сохранено ни одной ассоциации, пока что...</h4>
                }
            </div>
            <div class="col-md-6">
                Здесь будет отображаться таблица всех сохраненных ранее ассоциаций<br />
                Новые ассоциации будут добавляться динамически<br />
                @if (Model.ListAssociation.Count() == 0)
                {
                    <strong>Когда будет сохранена хоть одна ассоциация, здесь появится кнопка экспорта таблицы ассоциаций в формат .xls</strong>
                }
                else
                {
                    <a id="dlink" style="display:none;"></a>
                    <div class="defaultStyleButton" style="width: 120px;"
                            onclick="tableToExcel('myAssociation', 'Мои ассоциации слов', 'Мои ассоциации слов.xls')">
                        Экспорт в .xls
                    </div>
                }
            </div>

        <div id="alertSave" class="alertMsg" style="display: none;">
            Ваша ассоциация успешно сохранена
        </div>
        <div id="alertDel" class="alertMsg" style="display: none;">
            Ваша ассоциация успешно удалена
        </div>
    </div>
    </div>
</form>

<script type="text/javascript">

    var isFilter, ch1, ch2, ch3, ch4, ch5;
    $("#loading").css("display", "none");

    $('#searchWord').keydown(function (event) {
        if (event.which == 13) {
            if ($("#searchWord").val() != "") {
                searchWord();
            } else {
                $("#wordDefinition").text("");
            }

            event.preventDefault();
        }
    });

    // обработчик клика по ENTER на инпуте ввода слова
    $('#currentWord').keydown(function (event) {
        // значения чекбоксов фильтров
        ch1 = $("#chFullAndSymbols").prop("checked");
        ch2 = $("#chFirstLetters").prop("checked");
        ch3 = $("#chFirstLettersLast").prop("checked");
        ch4 = $("#chFirstConsLetters").prop("checked");
        ch5 = $("#chFirstConsLettersLast").prop("checked");

        if (ch1 || ch2 || ch3 || ch4 || ch5) isFilter = true
        else isFilter = false

        if (event.which == 13) {
            if ($("#currentWord").val() != "" && isFilter) {
                $("#noFilter, #noWord").removeClass('show');
                searchAssotiation();
            } else if ($("#currentWord").val() != "" && !isFilter) {
                $("#boxResult").text("");
                $("#noWord").removeClass('show');
                $("#noFilter").addClass('show');
            } else {
                $("#boxResult").text("");
                $("#noFilter").removeClass('show');
                $("#noWord").addClass('show');
            }
            event.preventDefault();
        }
    });
    $(".close").click(function () {
        $(this).parent().removeClass('show');
    });

    function searchWord() {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();
        $("#wordDefinition").text("");
        var wordValue = $("#searchWord").val();
        var myData = { word: wordValue };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });
        $.ajax({
            url: "/Dictionary/SearchWord",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);
                $("#wordDefinition").text(data);
            }
        });
    }

    function searchAssotiation() {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();

        $("#boxResult").text("");
        $("#loading").css("display", "block");
        var wordValue = $("#currentWord").val();
        var myData = { word: wordValue, full: ch1, f3: ch2, f3len: ch3, f3cons: ch4, f3consLen: ch5 };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

        $.ajax({
            url: "/Dictionary/SearchAssotiation",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);

                var box = $("#boxResult");
                $("#loading").css("display", "none");
                if (data.fullAndSymbols != [] && data.fullAndSymbols != null) {
                    var len = data.fullAndSymbols.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p><span title='Добавить в мои ассоциации' class='glyphicon glyphicon-plus' onclick='return saveAssociation(\"" + data.fullAndSymbols[i].word + "\", this )'></span><span class='w' title='" + data.fullAndSymbols[i].definition + "'>" + data.fullAndSymbols[i].word + "</span></p>");
                    }
                }
                if (data.firstThreeLettersLength != [] && data.firstThreeLettersLength != null) {
                    var len = data.firstThreeLettersLength.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p><span title='Добавить в мои ассоциации' class='glyphicon glyphicon-plus' onclick='return saveAssociation(\"" + data.firstThreeLettersLength[i].word + "\", this )'></span><span class='w' title='" + data.firstThreeLettersLength[i].definition + "'>" + data.firstThreeLettersLength[i].word + "</span></p>");
                    }
                }
                if (data.firstThreeConsLettersLength != [] && data.firstThreeConsLettersLength != null) {
                    var len = data.firstThreeConsLettersLength.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p><span title='Добавить в мои ассоциации' class='glyphicon glyphicon-plus' onclick='return saveAssociation(\"" + data.firstThreeConsLettersLength[i].word + "\", this )'></span><span class='w' title='" + data.firstThreeConsLettersLength[i].definition + "'>" + data.firstThreeConsLettersLength[i].word + "</span></p>");
                    }
                }
                if (data.firstThreeLetters != [] && data.firstThreeLetters != null) {
                    var len = data.firstThreeLetters.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p><span title='Добавить в мои ассоциации' class='glyphicon glyphicon-plus' onclick='return saveAssociation(\"" + data.firstThreeLetters[i].word + "\",  this )'></span><span class='w' title='" + data.firstThreeLetters[i].definition + "'>" + data.firstThreeLetters[i].word + "</span></p>");
                    }
                }
                if (data.firstThreeConsLetters != [] && data.firstThreeConsLetters != null) {
                    var len = data.firstThreeConsLetters.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p><span title='Добавить в мои ассоциации' class='glyphicon glyphicon-plus' onclick='return saveAssociation(\"" + data.firstThreeConsLetters[i].word + "\", this )'></span><span class='w' title='" + data.firstThreeConsLetters[i].definition + "'>" + data.firstThreeConsLetters[i].word + "</span></p>");
                    }
                }

                // если по запросу ничего не найдено
                if (data.fullAndSymbols === null &&
                    data.firstThreeLetters === null &&
                    data.firstThreeLettersLength === null &&
                    data.firstThreeConsLetters === null &&
                    data.firstThreeConsLettersLength === null
                ) {
                    box.append("<p>По запросу ничего не найдено. Проверьте правильность написания слова или попробуйте поставить больше фильтров. Хотя... может быть и такое, что Ваше слово настолько уникальное, что ему не нашлось схожих из 50000 слов)</p>");
                }
            }
        });
    }

    function saveAssociation(assWord, elt) {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();
        var wordValue = $("#currentWord").val();
        var myData = { word: wordValue, wordAssociation: assWord };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

        $.ajax({
            url: "/Dictionary/SaveAssociation",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);

                var name = "glyphicon-ok";
                var arr = elt.className.split(" ");
                if (arr.indexOf(name) == -1) {
                    elt.className += " " + name;
                }
                elt.classList.remove("glyphicon-plus");


                $("#boxUserAssociation").html('<table class="table" id="myAssociation"><thead><tr style="font-weight: bold"><th style="width: 20%">Слово</th><th style="width: 73%">Ассоциации</th><th style="width: 7%"></th></tr></thead><tbody></tbody></table> ');
                for (var i = 0; i < data.length; i++) {
                    $("#boxUserAssociation tbody").append('<tr><td>' + data[i].word + '</td><td>' + data[i].allWordsAss + '</td><td><span class="title glyphicon glyphicon-trash pointer" title="Удалить" onclick="return deleteAssociation(\'' + data[i].word + '\')"></span></td></tr>');
                }
                $("#boxUserAssociation .table").tablesorter({ headers: { 2: { sorter: false } } });


                $("#alertSave").css("display", "block");
                setInterval(function () {
                    $("#alertSave").css("display", "none");
                }, 4 * 1000);
            }
        });
    }

    function deleteAssociation(delWord) {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();
        var wordValue = $("#currentWord").val();
        var myData = { word: delWord };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });

        $.ajax({
            url: "/Dictionary/DeleteAssociation",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);

                if (data.length != 0) {
                    $("#boxUserAssociation").html('<table class="table" id="myAssociation"><thead><tr style="font-weight: bold"><th style="width: 20%">Слово</th><th style="width: 73%">Ассоциации</th><th style="width: 7%"></th></tr></thead><tbody></tbody></table> ');
                    for (var i = 0; i < data.length; i++) {
                        $("#boxUserAssociation tbody").append('<tr><td>' + data[i].word + '</td><td>' + data[i].allWordsAss + '</td><td><span class="title glyphicon glyphicon-trash pointer" title="Удалить" onclick="return deleteAss(\'' + data[i].word + '\')"></span></td></tr>');
                    }
                    $("#boxUserAssociation .table").tablesorter({ headers: { 2: { sorter: false } } });

                    $("#alertDel").css("display", "block");
                    setInterval(function () {
                        $("#alertDel").css("display", "none");
                    }, 4 * 1000);
                } else {
                    $("#boxUserAssociation").html('<h4>Не сохранено ни одной ассоциации, пока что...</h4>');
                }
            }
        });
    }

    $("#boxUserAssociation .table").tablesorter({ headers: { 2: { sorter: false } } });


    // Export to Excell
    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;charset=UTF-8;base64,'
            , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
            , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (table, name, filename) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }

            document.getElementById("dlink").href = uri + base64(format(template, ctx));
            document.getElementById("dlink").download = filename;
            document.getElementById("dlink").click();
        }
    })();

</script>
