@using TestNetCore.Models.Widgets.Dictionary;
@using Newtonsoft.Json;
@model TestNetCore.Models.Widgets.Dictionary.DictionaryViewModel
@{
    ViewData["Title"] = "Dictionary";
    Layout = "~/Views/Shared/_LayoutCabinet.cshtml";
}

<form asp-controller="Dictionary" asp-action="Dictionary"
      id="Dictionary"
      method="post" enctype="multipart/form-data"
      class="col-md-12">
    @Html.AntiForgeryToken()
    <div class="page-block">
        <h2 id="">Поиск значения слова по словарю</h2>
        <p>ПС: только имена существительные, слов в словаре: @Model.CountWord</p>
        <div class="form-group">
            <label class="col-md-3 control-label" for="bgColorBoxInput" id="bgcolor">Введите искомое слово:</label>
            <div class="col-md-9">
                @*<input type="text" id="searchWord" asp-for="@Model.SearchWord" style="width: 300px;">*@
                <div class="input-group" style="width: 300px;">
                    <span class="input-group-addon" id="basic-addon1"><span class="glyphicon glyphicon-pencil"></span></span>
                    <input type="text" id="searchWord" class="form-control" placeholder="Введите слово" aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-md-12" id="wordDefinition"></div>
        </div>
    </div>

    <div class="page-block">
        <h2>Подбор ассоциаций к звучанию иностранного слова</h2>
        <h4>Страница в стадии разработки</h4>
        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">1</div></div>
            <div class="col-md-5 boxInput">
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon1"><span class="glyphicon glyphicon-pencil"></span></span>
                    <input type="text" id="currentWord" class="form-control" placeholder="Введите слово" aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-md-6">Введите "звучание" слова русскими буквами</div>
        </div>

        @*<div class="row asRow">
            <div class="col-md-1"><div class="asNumber">2</div></div>
            <div class="col-md-5 boxSettings">
                <input type="checkbox" aria-label="1">
                <input type="checkbox" aria-label="2">
                <input type="checkbox" aria-label="3">
            </div>
            <div class="col-md-6">Выберите, как будут составляться ассоциации</div>
        </div>*@

        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">2</div></div>
            <div class="col-md-5 boxResult">
                <div id="boxResult"></div>
                <img id="loading" src="~/img/loadingCube.gif" />
            </div>
            <div class="col-md-6">Здесь появятся похожие по звучанию слова. Составьте из наиболее интересных из них яркий обрах и запомните его!</div>
        </div>

        <div class="row asRow">
            <div class="col-md-1"><div class="asNumber">3</div></div>
            <div class="col-md-5">
                <table>
                    <thead>
                        <tr>
                            <th>Слово</th>
                            <th>Ассоциации</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var i in Model.ListAssociation)
                        {
                            <tr>
                                <td>@i.Word</td>
                                <td>@i.AllWordsAss</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-md-6">Здесь будет отображаться таблица всех сохраненных ранее ассоциаций</div>
        </div>
    </div>
</form>

<script type="text/javascript">
    $("#loading").css("display", "none");

    $('#searchWord').keydown(function (event) {        
        if (event.which == 13) {
            if ($("#searchWord").val() != "") {
                searchWord();
            } else {
                $("#wordDefinition").text("");
            }
            
            event.preventDefault();
        }
    });

    $('#currentWord').keydown(function (event) {
        if (event.which == 13) {
            if ($("#currentWord").val() != "") {
                searchAssotiation();
            } else {
                $("#boxResult").text("");
            }
            event.preventDefault();
        }
    });

    function searchWord() {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();
        $("#wordDefinition").text("");
        var wordValue = $("#searchWord").val();
        var myData = { word: wordValue };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });
        $.ajax({
            url: "/Dictionary/SearchWord",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);
                $("#wordDefinition").text(data);
            }
        });
    }

    function searchAssotiation() {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();
        $("#boxResult").text("");
        $("#loading").css("display", "block");
        var wordValue = $("#currentWord").val();
        var myData = { word: wordValue };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });
        $.ajax({
            url: "/Dictionary/SearchAssotiation",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);
                var box = $("#boxResult");
                $("#loading").css("display", "none");
                if (data.category1 != []) {
                    var len = data.category1.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p title='" + data.category1[i].definition + "'>" + data.category1[i].word + "<span class='glyphicon glyphicon-plus-sign' onclick='return saveAssociation(\"" + data.category1[i].word + "\")'></span></p>");
                    }
                }
                if (data.category3 != []) {
                    var len = data.category3.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p title='" + data.category3[i].definition + "'>" + data.category3[i].word + "<span class='glyphicon glyphicon-plus-sign' onclick='return saveAssociation(\"" + data.category3[i].word + "\")'></span></p>");
                    }
                }
                if (data.category5 != []) {
                    var len = data.category5.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p title='" + data.category5[i].definition + "'>" + data.category5[i].word + "<span class='glyphicon glyphicon-plus-sign' onclick='return saveAssociation\"" + data.category5[i].word + "\")'></span></p>");
                    }
                }
                if (data.category2 != []) {
                    var len = data.category2.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p title='" + data.category2[i].definition + "'>" + data.category2[i].word + "<span class='glyphicon glyphicon-plus-sign' onclick='return saveAssociation(\"" + data.category2[i].word + "\")'></span></p>");
                    }
                }
                if (data.category4 != []) {
                    var len = data.category4.length;
                    for (var i = 0; i < len; i++) {
                        box.append("<p title='" + data.category4[i].definition + "'>" + data.category4[i].word + "<span class='glyphicon glyphicon-plus-sign' onclick='return saveAssociation(\"" + data.category4[i].word + "\")'></span></p>");
                    }
                }
            }
        });
    }

    function saveAssociation(assWord) {
        var token = $('input[name="__RequestVerificationToken"]', $('#Dictionary')).val();
        var wordValue = $("#currentWord").val();
        var myData = { word: wordValue, wordAssociation: assWord };
        var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });
        $.ajax({
            url: "/Dictionary/SaveAssociation",
            type: "POST",
            data: dataWithAntiforgeryToken,
            success: function (data) {
                console.log("data: ", data);
            }
        });
    }
</script>
